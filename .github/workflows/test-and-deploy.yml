name: End to End Test and Deployment

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  build_service_one:
    runs-on: ubuntu-latest
    name: Build Service One
    steps:
      - uses: actions/checkout@v2
        with:
          repository: E2E-Orchestration/Service-One
          path: main

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'
          include-prerelease: true

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: dotnet publish
        run: dotnet publish -c Release src/Service-One.Web -o ${{env.DOTNET_ROOT}}/service-one

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: service-one-app
          path: ${{env.DOTNET_ROOT}}/service-one

  deploy_service_one_e2e:
    runs-on: ubuntu-latest
    needs: build_service_one
    name: Deploy Service One
    environment:
      name: 'test'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: service-one-app

    - uses: azure/webapps-deploy@v2
      with:
        app-name: 'service-one'
        publish-profile: ${{ secrets.AZURE_CREDENTIALS_SERVICE_ONE }}
        package: .
    
    - uses: azure/login@v1
      with:
        creds: '${{ secrets.AZ_LOGIN_SERVICE_ONE }}'
    
    - uses: azure/appservice-settings@v1
      with:
        app-name: 'service-one'
        mask-inputs: false
        app-settings-json: |
          [
            {
              "name": "ServiceTwoUrl",
              "value": "https://service-two-e2e.azurewebsites.net/api/",
              "slotSetting": false
            }
          ]
    
    - run: |
        az logout

  build_service_two:
    runs-on: ubuntu-latest
    name: Build Service Two
    steps:
      - uses: actions/checkout@v2
        with:
          repository: E2E-Orchestration/Service-Two
          path: main

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'
          include-prerelease: true

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: dotnet publish
        run: dotnet publish -c Release src/Service-Two.Web -o ${{env.DOTNET_ROOT}}/service-two

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: service-two-app
          path: ${{env.DOTNET_ROOT}}/service-two

  deploy_service_two_e2e:
    runs-on: ubuntu-latest
    name: Deploy Service Two
    needs: build
    environment:
      name: 'test'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v2
      with:
        name: service-two-app

    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'service-two'
        slot-name: 'production'
        publish-profile: ${{ secrets.AZURE_CREDENTIALS_SERVICE_TWO }}
        package: .
  
  build_deploy_ui_e2e:
    runs-on: ubuntu-latest
    name: Build and Deploy UI to E2E
    steps:
      runs-on: ubuntu-latest
      - uses: actions/checkout@v2
          with:
            repository: E2E-Orchestration/UI
            path: main

        - uses: microsoft/variable-substitution@v1 
          with:
              files: './src/wwwroot/appsettings.json'
          env:
              ApiConfig.ApiUri: https://service-one-e2e.azurewebsites.net/api/

        - name: Build And Deploy
          id: builddeploy
          uses: Azure/static-web-apps-deploy@v1
          with:
            azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
            repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
            action: "upload"
            ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
            # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
            app_location: "src" # App source code path
            output_location: "wwwroot" # Built app content directory - optional
            ###### End of Repository/Build Configurations ######

  e2e_tests:
    runs-on: ubuntu-latest
    name: Run full end to end regression tests
    needs:
      - build_deploy_service_one_e2e
      - build_deploy_service_two_e2e
      - build_deploy_ui_e2e
    steps:
      runs-on: ubuntu-latest

      - uses: actions/checkout@v2
          with:
            repository: E2E-Orchestration/Tests
            path: main
        
        - name: Setup .NET Core SDK
          uses: actions/setup-dotnet@v1.8.1

        - name: setup Playwright
          run: |
            dotnet tool install --global Microsoft.Playwright.CLI
            dotnet build
            playwright install

        - name: run tests
          env:
            TestConfig__BaseUrl: https://gray-sand-0f71fae00.azurestaticapps.net
          run: dotnet test --configuration Release --logger "trx;LogFileName=test-results.trx"

        - name: Test Report
          uses: dorny/test-reporter@v1
          if: success() || failure()
          with:
            name: Tests Results
            path: "**/*.trx"
            reporter: dotnet-trx

  deploy_service_one_prod:
    runs-on: ubuntu-latest
    needs: build_service_one
    name: Deploy Service One to Production
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: service-one-app

    - uses: azure/webapps-deploy@v2
      with:
        app-name: 'service-one'
        publish-profile: ${{ secrets.AZURE_CREDENTIALS_SERVICE_ONE_PROD }}
        package: .
    
    - uses: azure/login@v1
      with:
        creds: '${{ secrets.AZ_LOGIN_SERVICE_ONE_PROD }}'
    
    - uses: azure/appservice-settings@v1
      with:
        app-name: 'service-one'
        mask-inputs: false
        app-settings-json: |
          [
            {
              "name": "ServiceTwoUrl",
              "value": "https://service-two-prod.azurewebsites.net/api/",
              "slotSetting": false
            }
          ]
    
    - run: |
        az logout

  deploy_service_two_prod:
    runs-on: ubuntu-latest
    name: Deploy Service Two to Production
    needs: build
    environment:
      name: 'prod'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v2
      with:
        name: service-two-app

    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'service-two'
        slot-name: 'production'
        publish-profile: ${{ secrets.AZURE_CREDENTIALS_SERVICE_TWO_PROD }}
        package: .
  
  build_deploy_ui:
    runs-on: ubuntu-latest
    name: Build and Deploy UI to Prod
    steps:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
          with:
            repository: E2E-Orchestration/UI
            path: main

        - uses: microsoft/variable-substitution@v1 
          with:
              files: './src/wwwroot/appsettings.json'
          env:
              ApiConfig.ApiUri: https://service-one-prod.azurewebsites.net/api/

        - name: Build And Deploy
          id: builddeploy
          uses: Azure/static-web-apps-deploy@v1
          with:
            azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_PROD }}
            repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
            action: "upload"
            ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
            # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
            app_location: "src" # App source code path
            output_location: "wwwroot" # Built app content directory - optional
            ###### End of Repository/Build Configurations ######
  